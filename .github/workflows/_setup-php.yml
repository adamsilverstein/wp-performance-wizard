name: Setup PHP Environment

on:
  workflow_call:
    inputs:
      php-versions:
        description: 'JSON array of PHP versions to test'
        required: false
        type: string
        default: '["7.4", "8.0", "8.1", "8.2"]'
      fail-fast:
        description: 'Whether to fail fast on matrix builds'
        required: false
        type: boolean
        default: false
      run-phpcs:
        description: 'Whether to run PHPCS'
        required: false
        type: boolean
        default: false
      run-phpstan:
        description: 'Whether to run PHPStan'
        required: false
        type: boolean
        default: true

jobs:
  quality-checks:
    name: Quality Checks (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ${{ fromJson(inputs.php-versions) }}
      fail-fast: ${{ inputs.fail-fast }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Run PHPCS (Code Standards)
        if: ${{ inputs.run-phpcs }}
        run: composer run lint

      - name: Run PHPStan (Static Analysis)
        if: ${{ inputs.run-phpstan }}
        run: composer run phpstan

      - name: Annotate PHPStan results
        if: ${{ inputs.run-phpstan && !inputs.run-phpcs && failure() }}
        run: |
          echo "::error::PHPStan analysis failed. Please check the output above for details."

      - name: Summary
        if: ${{ inputs.run-phpcs && always() }}
        run: |
          echo "âœ… Code quality checks completed for PHP ${{ matrix.php-version }}"
          echo "ðŸ“‹ Checks performed:"
          if [ "${{ inputs.run-phpcs }}" = "true" ]; then
            echo "   - PHPCS (WordPress Coding Standards)"
          fi
          if [ "${{ inputs.run-phpstan }}" = "true" ]; then
            echo "   - PHPStan (Static Analysis Level 5)"
          fi
